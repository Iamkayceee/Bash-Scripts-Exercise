## Exercises

1. Write a script that takes two numbers as command-line arguments and prints their sum, difference, product, and quotient.

2. Create a script that accepts a directory path as an argument and lists all files in that directory. If no argument is provided, it should use the current director>

3. Write a script that can take multiple flags (-v for verbose mode, -d for debug mode) and acts accordingly.

4. Create a script that takes a variable number of arguments and sorts them alphabetically.

# Answers

1. 
#!/bin/bash

x="$1"
y="$2"

echo "the product of both is $((x*y))"
echo "the sum of both is $((x+y))"
echo "the differences of both $((x-y))"

2. 
#!/bin/bash

dir="$1"

        if [ $# -eq 0 ]; then
        ls .
else
        ls "$dir"
fi
3. 
#!/bin/bash

sorted_arrays=$(echo "$@" | tr ' ' '\n' | sort)

echo "sorted arguments: "
echo "$sorted args"

4. 
#!/bin/bash
verbose=false
debug=false

debug_log() {
if [ "$debug"=true ]; then
echo "[DEBUG] $1"
fi

verbose_log() {
if [ "$verbose"=true ]; then
enter "[VERBOSE] $1"
fi
}

while getopts "vd" flag; do
        case "$flag" in
        v) verbose=true;;
        d) debug=true;;
        *) echo "usage: $0 [-v][-d]";;
        esac
done
verbose_log "starting task..."

if [ "$verbose"=true ]; then
verbose_log "verbose mode is enabled"
fi

if [ "$debug"=true ]; then
debug_log "debug mode to enabled"
fi

if [ "$verbose"=true ] && [ "$debug"=true ]; then
        verbose_log "both verbose & debug are enabled"
fi

perform_task() {
verbose_log "performing the task"
result="task completed"
verbose_log "result: $result"
debug_log "debug info: task ran without errors"

if [ "$verbose"=false ] && [ "$debug"=false ];
then
        echo "$result"
        fi
}

perform_task
